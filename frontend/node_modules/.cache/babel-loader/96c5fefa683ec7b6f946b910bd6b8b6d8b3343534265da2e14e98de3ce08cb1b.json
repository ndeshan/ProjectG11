{"ast":null,"code":"import{supabaseAPI}from'../lib/supabase';export const canteenAPI={getAll:()=>supabaseAPI.getCanteens(),getById:id=>supabaseAPI.getCanteens(),getQueueStatus:id=>Promise.resolve({data:{canteen_id:id,queue_length:Math.floor(Math.random()*30),estimated_wait_time:Math.floor(Math.random()*20),peak_status:['low','medium','high'][Math.floor(Math.random()*3)]}})};export const menuAPI={getAll:canteenId=>supabaseAPI.getMenuItems(canteenId),getByCategory:(canteenId,category)=>supabaseAPI.getMenuItems(canteenId,category),getFavorites:()=>supabaseAPI.getMenuItems()};export const orderAPI={create:orderData=>supabaseAPI.createOrder(orderData),getAll:()=>supabaseAPI.getOrders(),getById:id=>supabaseAPI.getOrders(),updateStatus:(id,status)=>Promise.resolve({data:{order:{id,status}}})};","map":{"version":3,"names":["supabaseAPI","canteenAPI","getAll","getCanteens","getById","id","getQueueStatus","Promise","resolve","data","canteen_id","queue_length","Math","floor","random","estimated_wait_time","peak_status","menuAPI","canteenId","getMenuItems","getByCategory","category","getFavorites","orderAPI","create","orderData","createOrder","getOrders","updateStatus","status","order"],"sources":["/home/nipuna/ProjectG1/frontend/src/services/api.js"],"sourcesContent":["import { supabaseAPI } from '../lib/supabase';\n\nexport const canteenAPI = {\n  getAll: () => supabaseAPI.getCanteens(),\n  getById: (id) => supabaseAPI.getCanteens(),\n  getQueueStatus: (id) => Promise.resolve({\n    data: {\n      canteen_id: id,\n      queue_length: Math.floor(Math.random() * 30),\n      estimated_wait_time: Math.floor(Math.random() * 20),\n      peak_status: ['low', 'medium', 'high'][Math.floor(Math.random() * 3)]\n    }\n  }),\n};\n\nexport const menuAPI = {\n  getAll: (canteenId) => supabaseAPI.getMenuItems(canteenId),\n  getByCategory: (canteenId, category) => supabaseAPI.getMenuItems(canteenId, category),\n  getFavorites: () => supabaseAPI.getMenuItems(),\n};\n\nexport const orderAPI = {\n  create: (orderData) => supabaseAPI.createOrder(orderData),\n  getAll: () => supabaseAPI.getOrders(),\n  getById: (id) => supabaseAPI.getOrders(),\n  updateStatus: (id, status) => Promise.resolve({ data: { order: { id, status } } }),\n};"],"mappings":"AAAA,OAASA,WAAW,KAAQ,iBAAiB,CAE7C,MAAO,MAAM,CAAAC,UAAU,CAAG,CACxBC,MAAM,CAAEA,CAAA,GAAMF,WAAW,CAACG,WAAW,CAAC,CAAC,CACvCC,OAAO,CAAGC,EAAE,EAAKL,WAAW,CAACG,WAAW,CAAC,CAAC,CAC1CG,cAAc,CAAGD,EAAE,EAAKE,OAAO,CAACC,OAAO,CAAC,CACtCC,IAAI,CAAE,CACJC,UAAU,CAAEL,EAAE,CACdM,YAAY,CAAEC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,CAAG,EAAE,CAAC,CAC5CC,mBAAmB,CAAEH,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,CAAG,EAAE,CAAC,CACnDE,WAAW,CAAE,CAAC,KAAK,CAAE,QAAQ,CAAE,MAAM,CAAC,CAACJ,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,CAAG,CAAC,CAAC,CACtE,CACF,CAAC,CACH,CAAC,CAED,MAAO,MAAM,CAAAG,OAAO,CAAG,CACrBf,MAAM,CAAGgB,SAAS,EAAKlB,WAAW,CAACmB,YAAY,CAACD,SAAS,CAAC,CAC1DE,aAAa,CAAEA,CAACF,SAAS,CAAEG,QAAQ,GAAKrB,WAAW,CAACmB,YAAY,CAACD,SAAS,CAAEG,QAAQ,CAAC,CACrFC,YAAY,CAAEA,CAAA,GAAMtB,WAAW,CAACmB,YAAY,CAAC,CAC/C,CAAC,CAED,MAAO,MAAM,CAAAI,QAAQ,CAAG,CACtBC,MAAM,CAAGC,SAAS,EAAKzB,WAAW,CAAC0B,WAAW,CAACD,SAAS,CAAC,CACzDvB,MAAM,CAAEA,CAAA,GAAMF,WAAW,CAAC2B,SAAS,CAAC,CAAC,CACrCvB,OAAO,CAAGC,EAAE,EAAKL,WAAW,CAAC2B,SAAS,CAAC,CAAC,CACxCC,YAAY,CAAEA,CAACvB,EAAE,CAAEwB,MAAM,GAAKtB,OAAO,CAACC,OAAO,CAAC,CAAEC,IAAI,CAAE,CAAEqB,KAAK,CAAE,CAAEzB,EAAE,CAAEwB,MAAO,CAAE,CAAE,CAAC,CACnF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}