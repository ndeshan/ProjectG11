{"ast":null,"code":"import _objectSpread from\"/home/nipuna/ProjectG1/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect}from'react';import{Snackbar,Alert,Badge,IconButton,Popover,List,ListItem,ListItemText,Typography,Box}from'@mui/material';import NotificationsIcon from'@mui/icons-material/Notifications';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const NotificationSystem=()=>{const[notifications,setNotifications]=useState([]);const[anchorEl,setAnchorEl]=useState(null);const[snackbar,setSnackbar]=useState({open:false,message:'',severity:'info'});useEffect(()=>{// Simulate notifications\nconst timer=setTimeout(()=>{addNotification('Your Rice & Curry order is ready for pickup! 🍛','success');},10000);return()=>clearTimeout(timer);},[]);const addNotification=function(message){let severity=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'info';const newNotification={id:Date.now(),message,severity,timestamp:new Date(),read:false};setNotifications(prev=>[newNotification,...prev]);setSnackbar({open:true,message,severity});};const markAsRead=id=>{setNotifications(prev=>prev.map(n=>n.id===id?_objectSpread(_objectSpread({},n),{},{read:true}):n));};const unreadCount=notifications.filter(n=>!n.read).length;return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(IconButton,{color:\"inherit\",onClick:e=>setAnchorEl(e.currentTarget),children:/*#__PURE__*/_jsx(Badge,{badgeContent:unreadCount,color:\"error\",children:/*#__PURE__*/_jsx(NotificationsIcon,{})})}),/*#__PURE__*/_jsx(Popover,{open:Boolean(anchorEl),anchorEl:anchorEl,onClose:()=>setAnchorEl(null),anchorOrigin:{vertical:'bottom',horizontal:'right'},children:/*#__PURE__*/_jsxs(Box,{sx:{width:300,maxHeight:400},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",sx:{p:2,borderBottom:1,borderColor:'divider'},children:\"Notifications\"}),/*#__PURE__*/_jsx(List,{children:notifications.length===0?/*#__PURE__*/_jsx(ListItem,{children:/*#__PURE__*/_jsx(ListItemText,{primary:\"No notifications\"})}):notifications.map(notification=>/*#__PURE__*/_jsx(ListItem,{sx:{bgcolor:notification.read?'transparent':'action.hover'},onClick:()=>markAsRead(notification.id),children:/*#__PURE__*/_jsx(ListItemText,{primary:notification.message,secondary:notification.timestamp.toLocaleTimeString()})},notification.id))})]})}),/*#__PURE__*/_jsx(Snackbar,{open:snackbar.open,autoHideDuration:6000,onClose:()=>setSnackbar(_objectSpread(_objectSpread({},snackbar),{},{open:false})),children:/*#__PURE__*/_jsx(Alert,{severity:snackbar.severity,onClose:()=>setSnackbar(_objectSpread(_objectSpread({},snackbar),{},{open:false})),children:snackbar.message})})]});};export default NotificationSystem;","map":{"version":3,"names":["React","useState","useEffect","Snackbar","Alert","Badge","IconButton","Popover","List","ListItem","ListItemText","Typography","Box","NotificationsIcon","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","NotificationSystem","notifications","setNotifications","anchorEl","setAnchorEl","snackbar","setSnackbar","open","message","severity","timer","setTimeout","addNotification","clearTimeout","arguments","length","undefined","newNotification","id","Date","now","timestamp","read","prev","markAsRead","map","n","_objectSpread","unreadCount","filter","children","color","onClick","e","currentTarget","badgeContent","Boolean","onClose","anchorOrigin","vertical","horizontal","sx","width","maxHeight","variant","p","borderBottom","borderColor","primary","notification","bgcolor","secondary","toLocaleTimeString","autoHideDuration"],"sources":["/home/nipuna/ProjectG1/frontend/src/components/NotificationSystem.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Snackbar, Alert, Badge, IconButton, Popover, List, ListItem, ListItemText, Typography, Box } from '@mui/material';\nimport NotificationsIcon from '@mui/icons-material/Notifications';\n\nconst NotificationSystem = () => {\n  const [notifications, setNotifications] = useState([]);\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [snackbar, setSnackbar] = useState({ open: false, message: '', severity: 'info' });\n\n  useEffect(() => {\n    // Simulate notifications\n    const timer = setTimeout(() => {\n      addNotification('Your Rice & Curry order is ready for pickup! 🍛', 'success');\n    }, 10000);\n\n    return () => clearTimeout(timer);\n  }, []);\n\n  const addNotification = (message, severity = 'info') => {\n    const newNotification = {\n      id: Date.now(),\n      message,\n      severity,\n      timestamp: new Date(),\n      read: false\n    };\n    setNotifications(prev => [newNotification, ...prev]);\n    setSnackbar({ open: true, message, severity });\n  };\n\n  const markAsRead = (id) => {\n    setNotifications(prev => prev.map(n => n.id === id ? {...n, read: true} : n));\n  };\n\n  const unreadCount = notifications.filter(n => !n.read).length;\n\n  return (\n    <>\n      <IconButton color=\"inherit\" onClick={(e) => setAnchorEl(e.currentTarget)}>\n        <Badge badgeContent={unreadCount} color=\"error\">\n          <NotificationsIcon />\n        </Badge>\n      </IconButton>\n\n      <Popover\n        open={Boolean(anchorEl)}\n        anchorEl={anchorEl}\n        onClose={() => setAnchorEl(null)}\n        anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }}\n      >\n        <Box sx={{ width: 300, maxHeight: 400 }}>\n          <Typography variant=\"h6\" sx={{ p: 2, borderBottom: 1, borderColor: 'divider' }}>\n            Notifications\n          </Typography>\n          <List>\n            {notifications.length === 0 ? (\n              <ListItem>\n                <ListItemText primary=\"No notifications\" />\n              </ListItem>\n            ) : (\n              notifications.map((notification) => (\n                <ListItem \n                  key={notification.id}\n                  sx={{ bgcolor: notification.read ? 'transparent' : 'action.hover' }}\n                  onClick={() => markAsRead(notification.id)}\n                >\n                  <ListItemText\n                    primary={notification.message}\n                    secondary={notification.timestamp.toLocaleTimeString()}\n                  />\n                </ListItem>\n              ))\n            )}\n          </List>\n        </Box>\n      </Popover>\n\n      <Snackbar\n        open={snackbar.open}\n        autoHideDuration={6000}\n        onClose={() => setSnackbar({...snackbar, open: false})}\n      >\n        <Alert severity={snackbar.severity} onClose={() => setSnackbar({...snackbar, open: false})}>\n          {snackbar.message}\n        </Alert>\n      </Snackbar>\n    </>\n  );\n};\n\nexport default NotificationSystem;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}